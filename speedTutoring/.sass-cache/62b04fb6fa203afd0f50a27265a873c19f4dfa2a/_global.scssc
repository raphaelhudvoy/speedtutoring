3.2.12 (Media Mark)
02a1a81102cc6857a82cd5c56913b180ff78daa0
o:Sass::Tree::RootNode
:@template"û*//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16px !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
// em-calc(10 20 30px 40);
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
// em-calc((10, 20, 30, 40px));
// Optionally call with a different base (eg: 8px) to calculate em.
// em-calc(16px 32px 48px, 8px);
// If you require to comma separate your list
// em-calc((16px, 32px, 48), 8px);

@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

@function em-calc($values, $base-value: $em-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: ();
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

// Support for the old syntax

@function emCalc($values){
  @return em-calc($values);
}

// Maybe you want to create rems with pixels
// $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
// @function remCalc($pxWidth) {
//   @return $pxWidth / $rem-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

// Used to provide media query values for javascript components.
meta.foundation-mq-small {
  font-family: $small;
  width: $small-screen;
}

meta.foundation-mq-medium {
  font-family: $medium;
  width: $medium-screen;
}

meta.foundation-mq-large {
  font-family: $large;
  width: $large-screen;
}

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:@has_childrenT:@options{ :@children[Zo:Sass::Tree::CommentNode
:
@type:silent:@value[")/*
 * Global Foundation Mixins
 * */;@;	[ :
@lineio:Sass::Tree::VariableNode:
@name"experimental;@;	[ ;i
:@guarded"!default:
@expro:Sass::Script::Bool;T;@;i
o;

;;;["0/* We use this to control border radius. */;@;	[ ;io:Sass::Tree::MixinDefNode;T;"radius;@;	[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@name"radius:@options{ :@underscored_name"radius:
@linei0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:@valueo; 	;"radius;@;"radius;	i;["-webkit-border-radius:@prop_syntax:new;@:
@tabsi :@children[ ;	io:Sass::Tree::PropNode:@valueo; 	;"radius;@;"radius;	i;["border-radius:@prop_syntax:new;@:
@tabsi :@children[ ;	i:@splat0;i:
@args[[o:Sass::Script::Variable;"radius;@:@underscored_name"radiuso;	;"global-radius;@;"global_radius;io;

;;;["F/* We use this to create equal side border radius on elements. */;@;	[ ;io;;T;"side-radius;@;	[u;õ[o:Sass::Script::Operation
:@options{ :
@linei:@operand2o:Sass::Script::String	:
@type:identifier:@value"	left;@;i:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side;@:@underscored_name"	side;iu:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:@options{ :
@linei":@operand2o:Sass::Script::String	:
@type:identifier:@value"
right;@;i":@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side;@:@underscored_name"	side;i"u:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:@options{ :
@linei,:@operand2o:Sass::Script::String	:
@type:identifier:@value"top;@;i,:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side;@:@underscored_name"	side;i,u:Sass::Tree::IfNode[o:Sass::Script::Operation
:@options{ :
@linei6:@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom;@;i6:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"	side;@:@underscored_name"	side;i60[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei70[	o:Sass::Tree::PropNode:@valueo; 	;"radius;@;"radius;	i8;["#-moz-border-radius-bottomright:@prop_syntax:new;@:
@tabsi :@children[ ;	i8o;
;o; 	;"radius;@;"radius;	i9;[""-moz-border-radius-bottomleft;;;@;i ;[ ;	i9o;
;o; 	;"radius;@;"radius;	i:;["'-webkit-border-bottom-right-radius;;;@;i ;[ ;	i:o;
;o; 	;"radius;@;"radius;	i;;["&-webkit-border-bottom-left-radius;;;@;i ;[ ;	i;o:Sass::Tree::PropNode;o;	;"radius;@;"radius;i=;["border-bottom-right-radius:@prop_syntax:new;@:
@tabsi :@children[ ;i=o;;o;	;"radius;@;"radius;i>;["border-bottom-left-radius;;;@;i ;[ ;i>[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei-0[	o:Sass::Tree::PropNode:@valueo; 	;"radius;@;"radius;	i.;[" -moz-border-radius-topright:@prop_syntax:new;@:
@tabsi :@children[ ;	i.o;
;o; 	;"radius;@;"radius;	i/;["-moz-border-radius-topleft;;;@;i ;[ ;	i/o;
;o; 	;"radius;@;"radius;	i0;["$-webkit-border-top-right-radius;;;@;i ;[ ;	i0o;
;o; 	;"radius;@;"radius;	i1;["#-webkit-border-top-left-radius;;;@;i ;[ ;	i1o:Sass::Tree::PropNode;o;	;"radius;@;"radius;i3;["border-top-right-radius:@prop_syntax:new;@:
@tabsi :@children[ ;i3o;;o;	;"radius;@;"radius;i4;["border-top-left-radius;;;@;i ;[ ;i4[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei#0[	o:Sass::Tree::PropNode:@valueo; 	;"radius;@;"radius;	i$;[" -moz-border-radius-topright:@prop_syntax:new;@:
@tabsi :@children[ ;	i$o;
;o; 	;"radius;@;"radius;	i%;["#-moz-border-radius-bottomright;;;@;i ;[ ;	i%o;
;o; 	;"radius;@;"radius;	i&;["$-webkit-border-top-right-radius;;;@;i ;[ ;	i&o;
;o; 	;"radius;@;"radius;	i';["'-webkit-border-bottom-right-radius;;;@;i ;[ ;	i'o:Sass::Tree::PropNode;o;	;"radius;@;"radius;i);["border-top-right-radius:@prop_syntax:new;@:
@tabsi :@children[ ;i)o;;o;	;"radius;@;"radius;i*;["border-bottom-right-radius;;;@;i ;[ ;i*[u;[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[	o:Sass::Tree::PropNode:@valueo; 	;"radius;@;"radius;	i;[""-moz-border-radius-bottomleft:@prop_syntax:new;@:
@tabsi :@children[ ;	io;
;o; 	;"radius;@;"radius;	i;["-moz-border-radius-topleft;;;@;i ;[ ;	io;
;o; 	;"radius;@;"radius;	i;["&-webkit-border-bottom-left-radius;;;@;i ;[ ;	io;
;o; 	;"radius;@;"radius;	i;["#-webkit-border-top-left-radius;;;@;i ;[ ;	io:Sass::Tree::PropNode;o;	;"radius;@;"radius;i;["border-bottom-left-radius:@prop_syntax:new;@:
@tabsi :@children[ ;io;;o;	;"radius;@;"radius;i ;["border-top-left-radius;;;@;i ;[ ;i ;0;i;[[o;;"	side;@;"	side0[o;;"radius;@;"radiuso;	;"global-radius;@;"global_radius;io;

;;;["E/* We can control whether or not we have inset shadows edges. */;@;	[ ;iBo;;T;"inset-shadow;@;	[u;¬[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiD0[o:Sass::Tree::PropNode:@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iEo; 	;"shiny-edge-color;@;"shiny_edge_color;	iEo:Sass::Script::String	:
@type:identifier;"
inset;@;	iE;@;	iE:@separator:
space;["-webkit-box-shadow:@prop_syntax:new;@:
@tabsi :@children[ ;	iEo:Sass::Tree::PropNode;o:Sass::Script::List	;[o;	;"shiny-edge-size;@;"shiny_edge_size;iGo;	;"shiny-edge-color;@;"shiny_edge_color;iGo:Sass::Script::String	;:identifier;"
inset;@;iG;@;iG:@separator:
space;["box-shadow:@prop_syntax:new;@:
@tabsi ;	[ ;iGu;ò[o:Sass::Script::Variable	:
@name"active:@options{ :@underscored_name"active:
@lineiI0[o:Sass::Tree::RuleNode:@has_childrenT;@:
@tabsi :@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiJ0[o:Sass::Tree::PropNode:@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iKo; 	;"shiny-edge-active-color;@;"shiny_edge_active_color;	iKo:Sass::Script::String	:
@type:identifier;"
inset;@;	iK;@;	iK:@separator:
space;["-webkit-box-shadow:@prop_syntax:new;@:
@tabsi :@children[ ;	iKo:Sass::Tree::PropNode:@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;@;"shiny_edge_size;	iMo; 	;"shiny-edge-active-color;@;"shiny_edge_active_color;	iMo:Sass::Script::String	:
@type:identifier;"
inset;@;	iM;@;	iM:@separator:
space;["box-shadow:@prop_syntax:new;@;i ;[ ;	iM;	iI:
@rule["&:active:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;	iI:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@:@sourceso:Set:
@hash{ ;	iI:@subject0;[o:Sass::Selector::Parent;@;	iIo:Sass::Selector::Pseudo
;["active:	@arg0;@;	iI:@syntactic_type:
class;0;iC;[[o;;"active;@;"activeo;;T;@;iCo;

;;;["5/* We use this to add transitions to elements */;@;	[ ;iPo;;T;"single-transition;@;	[u;	[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@lineiR0[o:Sass::Tree::PropNode:@valueo:Sass::Script::List	;[o; 	;"property;@;"property;	iSo; 	;"
speed;@;"
speed;	iSo; 	;"	ease;@;"	ease;	iS;@;	iS:@separator:
space;["-webkit-transition:@prop_syntax:new;@:
@tabsi :@children[ ;	iSo;
;o;	;[o; 	;"property;@;"property;	iTo; 	;"
speed;@;"
speed;	iTo; 	;"	ease;@;"	ease;	iT;@;	iT;;;["-moz-transition;;;@;i ;[ ;	iTo;;o;	;[o;	;"property;@;"property;iVo;	;"
speed;@;"
speed;iVo;	;"	ease;@;"	ease;iV;@;iV;;;["transition; ;!;@;"i ;	[ ;iV;0;iQ;[[o;;"property;@;"propertyo;	;;;"all;@;iQ[o;;"
speed;@;"
speedo:Sass::Script::Number:@denominator_units[ ;i,;@:@numerator_units["ms:@original"
300ms;iQ[o;;"	ease;@;"	easeo;	;;;"ease-out;@;iQo;

;;;["@/* We use this to add box-sizing across browser prefixes */;@;	[ ;iYo;;T;"box-sizing;@;	[u;<[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei[0[o:Sass::Tree::PropNode:@valueo; 	;"	type;@;"	type;	i\;["-moz-box-sizing:@prop_syntax:new;@:
@tabsi :@children[ ;	i\o;
;o; 	;"	type;@;"	type;	i];["-webkit-box-sizing;;;@;i ;[ ;	i]o;;o;	;"	type;@;"	type;i_;["box-sizing; ;!;@;"i ;	[ ;i_;0;iZ;[[o;;"	type;@;"	typeo;	;;;"border-box;@;iZo;

;;;["6/* We use this to create equilateral triangles */;@;	[ ;ibo;;T;"css-triangle;@;	[o;;o;;;;""";@;["content; ;!;@;"i ;	[ ;ido;;o;;;;"
block;@;["display; ;!;@;"i ;	[ ;ieo;;o;;;;"0;@;["
width; ;!;@;"i ;	[ ;ifo;;o;;;;"0;@;["height; ;!;@;"i ;	[ ;igo;;o;	;[o;	;;;"
inset;@;iho;	;"triangle-size;@;"triangle_size;ih;@;ih;;;["border; ;!;@;"i ;	[ ;ihu;d[o:Sass::Script::Operation
:@options{ :
@lineii:@operand2o:Sass::Script::String	:
@type:identifier:@value"top;@;ii:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;@:@underscored_name"triangle_direction;ii0[o:Sass::Tree::PropNode;o:Sass::Script::List	;[	o;	;"triangle-color;@;"triangle_color;ijo;		;
;;"transparent;@;ijo;		;
;;"transparent;@;ijo;		;
;;"transparent;@;ij;@;ij:@separator:
space;["border-color:@prop_syntax:new;@:
@tabsi :@children[ ;ijo;;o;	;
;;"
solid;@;["border-top-style;;;@;i ;[ ;iku;j[o:Sass::Script::Operation
:@options{ :
@lineim:@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom;@;im:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;@:@underscored_name"triangle_direction;im0[o:Sass::Tree::PropNode;o:Sass::Script::List	;[	o;		;
;;"transparent;@;ino;		;
;;"transparent;@;ino;	;"triangle-color;@;"triangle_color;ino;		;
;;"transparent;@;in;@;in:@separator:
space;["border-color:@prop_syntax:new;@:
@tabsi :@children[ ;ino;;o;	;
;;"
solid;@;["border-bottom-style;;;@;i ;[ ;iou;f[o:Sass::Script::Operation
:@options{ :
@lineiq:@operand2o:Sass::Script::String	:
@type:identifier:@value"	left;@;iq:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;@:@underscored_name"triangle_direction;iq0[o:Sass::Tree::PropNode;o:Sass::Script::List	;[	o;		;
;;"transparent;@;iro;		;
;;"transparent;@;iro;		;
;;"transparent;@;iro;	;"triangle-color;@;"triangle_color;ir;@;ir:@separator:
space;["border-color:@prop_syntax:new;@:
@tabsi :@children[ ;iro;;o;	;
;;"
solid;@;["border-left-style;;;@;i ;[ ;isu;h[o:Sass::Script::Operation
:@options{ :
@lineiu:@operand2o:Sass::Script::String	:
@type:identifier:@value"
right;@;iu:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction;@:@underscored_name"triangle_direction;iu0[o:Sass::Tree::PropNode;o:Sass::Script::List	;[	o;		;
;;"transparent;@;ivo;	;"triangle-color;@;"triangle_color;ivo;		;
;;"transparent;@;ivo;		;
;;"transparent;@;iv;@;iv:@separator:
space;["border-color:@prop_syntax:new;@:
@tabsi :@children[ ;ivo;;o;	;
;;"
solid;@;["border-right-style;;;@;i ;[ ;iw;0;ic;[[o;;"triangle-size;@;"triangle_size0[o;;"triangle-color;@;"triangle_color0[o;;"triangle-direction;@;"triangle_direction0o;

;;;[")/* We use this to do clear floats */;@;	[ ;i{o;;T;"clearfix;@;	[o;;o;;;;"1;@;["
*zoom; ;!;@;"i ;	[ ;i}o:Sass::Tree::RuleNode;T;@;"i ;	[o;;o;;;;"" ";@;["content; ;!;@;"i ;	[ ;i~o;;o;;;;"
table;@;["display; ;!;@;"i ;	[ ;i~;i~:
@rule["&:before, &:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i~:@members[o:Sass::Selector::Sequence;,[o:#Sass::Selector::SimpleSequence
;+@ê:@sourceso:Set:
@hash{ ;i~:@subject0;,[o:Sass::Selector::Parent;+@ê;i~o:Sass::Selector::Pseudo
;["before:	@arg0;+@ê;i~:@syntactic_type:
classo;-;,[o;.
;+@ê;/o;0;1{ ;i~;20;,[o;3;+@ê;i~o;4
;["
after;50;+@ê;i~;6;7o;';T;@;"i ;	[o;;o;;;;"	both;@;["
clear; ;!;@;"i ;	[ ;i;i;(["&:after;)o;*;+" ;i;,[o;-;,[o;.
;+@;/o;0;1{ ;i;20;,[o;3;+@;io;4
;["
after;50;+@;i;6;7;0;i|;[ o;

;;;["@/* We use this to add a glowing effect to block elements */;@;	[ ;i~o;;T;"block-glowing-effect;@;	[u;7[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:@valueo:Sass::Script::List	;[o;	;[o:Sass::Script::String	:
@type:identifier;"-webkit-box-shadow;@;	io; 	;"fade-time;@;"fade_time;	i;@;	i:@separator:
spaceo;	;[o;	;;;"border-color;@;	io; 	;"fade-time;@;"fade_time;	io;	;;;"ease-in-out;@;	i;@;	i;;;@;	i;:
comma;["-webkit-transition:@prop_syntax:new;@:
@tabsi :@children[ ;	io;
;o;	;[o;	;[o;	;;;"-moz-box-shadow;@;	io; 	;"fade-time;@;"fade_time;	i;@;	i;;o;	;[o;	;;;"border-color;@;	io; 	;"fade-time;@;"fade_time;	io;	;;;"ease-in-out;@;	i;@;	i;;;@;	i;;;["-moz-transition;;;@;i ;[ ;	io;;o;	;[o;	;[o;	;;;"box-shadow;@;io;	;"fade-time;@;"fade_time;i;@;i;;o;	;[o;	;;;"border-color;@;io;	;"fade-time;@;"fade_time;io;	;;;"ease-in-out;@;i;@;i;;;@;i;:
comma;["transition; ;!;@;"i ;	[ ;io;';T;@;"i ;	[u;Ë[o:Sass::Script::Variable	:
@name"experimental:@options{ :@underscored_name"experimental:
@linei0[o:Sass::Tree::PropNode:@valueo:Sass::Script::List	;[	o:Sass::Script::Number:@denominator_units[ ;i ;@:@numerator_units[ :@original"0;	io;;@;i ;@;[ ;"0;	io;;[ ;i
;@;["px;"5px;	io; 	;"glowing-effect-color;@;"glowing_effect_color;	i;@;	i:@separator:
space;["-webkit-box-shadow:@prop_syntax:new;@:
@tabsi :@children[ ;	io;
;o;	;[	o;;@;i ;@;[ ;"0;	io;;@;i ;@;[ ;"0;	io;;[ ;i
;@;["px;"5px;	io; 	;"glowing-effect-color;@;"glowing_effect_color;	i;@;	i;;;["-moz-box-shadow;;;@;i ;[ ;	io;;o;	;[	o;#;$[ ;i ;@;%[ ;&"0;io;#;$@=;i ;@;%[ ;&"0;io;#;$[ ;i
;@;%["px;&"5px;io;	;"glowing-effect-color;@;"glowing_effect_color;i;@;i;;;["box-shadow; ;!;@;"i ;	[ ;io;;o;	;"glowing-effect-color;@;"glowing_effect_color;i;["border-color; ;!;@;"i ;	[ ;i;i;(["&:o;	;"selector;@;"selector;i;0;i;[[o;;"selector;@;"selectoro;	;;;"
focus;@;i[o;;"fade-time;@;"fade_timeo;#;$[ ;i,;@;%["ms;&"
300ms;i[o;;"glowing-effect-color;@;"glowing_effect_coloro:Sass::Script::Funcall;"fade-out;@;0;i:@keywords{ ;[o;	;"primary-color;@;"primary_color;io;#;$@=;f	0.25;@;%[ ;&"	0.25;io;

;;;["%/*
 * Foundation Variables
 * */;@;	[ ;io;

;;;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */;@;	[ ;io;

;;;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */;@;	[ ;io;;"base-font-size;@;	[ ;i;"!default;o;#;$[ ;ii;@;%["%;&"	100%;io;

;;;["B/* $base-line-height is 24px while $base-font-size is 16px */;@;	[ ;io;;"base-line-height;@;	[ ;i;"!default;o;#;$[ ;i;@;%["%;&"	150%;io;

;;;["M/* This is the default html and body font-size for the base em value. */;@;	[ ;io;;"em-base;@;	[ ;i ;"!default;o;#;$[ ;i;@;%["px;&"	16px;i o;

;;;["7/* It strips the unit of measure and returns it */;@;	[ ;i¢o:Sass::Tree::FunctionNode;T;"strip-unit;@;	[o:Sass::Tree::ReturnNode	;@;	[ ;i¤;o:Sass::Script::Operation
;@;i¤:@operand2o;=
;@;i¤;>o;#;$@=;i;@;%[ ;&"1;i¤:@operator:	plus:@operand1o;=
;@;i¤;>o;#;$@=;i ;@;%[ ;&"0;i¤;?:
times;Ao;	;"num;@;"num;i¤;?:div;Ao;	;"num;@;"num;i¤;0;i£;[[o;;"num;@;"num0o;

;;;["	/* New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
 * Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
 * em-calc(10 20 30px 40);
 * Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
 * em-calc((10, 20, 30, 40px));
 * Optionally call with a different base (eg: 8px) to calculate em.
 * em-calc(16px 32px 48px, 8px);
 * If you require to comma separate your list
 * em-calc((16px, 32px, 48), 8px); */;@;	[ ;i§o;;;T;"convert-to-em;@;	[	o;;"
value;@;	[ ;i²;0;o;=
;@;i²;>o;#;$[ ;i;@;%["em;&"1em;i²;?;B;Ao;=
;@;i²;>o;9;"strip-unit;@;0;i²;:{ ;[o;	;"base-value;@;"base_value;i²;?;C;Ao;9;"strip-unit;@;0;i²;:{ ;[o;	;"
value;@;"
value;i²u;|[o:Sass::Script::Operation
:@options{ :
@linei³:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei ;@:@numerator_units["em:@original"0em;i³:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"
value;@:@underscored_name"
value;i³0[o:Sass::Tree::VariableNode;"
value;@:@children[ ;i³:@guarded0:
@expro;	;
[ ;i ;@;[ ;"0;i³o;

;;;["/* Turn 0em into 0 */;@;	[ ;i³o;<	;@;	[ ;i´;o;	;"
value;@;"
value;i´;0;i±;[[o;;"
value;@;"
value0[o;;"base-value;@;"base_valueo;	;"em-base;@;"em_base;i±o;;;T;"em-calc;@;	[
o;;"max;@;	[ ;i¸;0;o;9;"length;@;0;i¸;:{ ;[o;	;"values;@;"values;i¸u;[o:Sass::Script::Operation
:@options{ :
@lineiº:@operand2o:Sass::Script::Number:@denominator_units[ :@valuei;@:@numerator_units[ :@original"1;iº:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"max;@:@underscored_name"max;iº0[o:Sass::Tree::ReturnNode	;@:@children[ ;iº:
@expro:Sass::Script::Funcall;"convert-to-em;@:@splat0;iº:@keywords{ :
@args[o;;"nth;@;0;iº;{ ;[o;	;"values;@;"values;iºo;	;
@	;i;@;[ ;"1;iºo;	;"base-value;@;"base_value;iºo;;"emValues;@;	[ ;i¼;0;o;	;[ ;@;i¼;;o:Sass::Tree::ForNode:
@fromo;#;$@=;i;@;%[ ;&"1;i½;T;@:	@var"i;	[o;;"emValues;@;	[ ;i¾;0;o;9;"append;@;0;i¾;:{ ;[o;	;"emValues;@;"emValues;i¾o;9;"convert-to-em;@;0;i¾;:{ ;[o;9;"nth;@;0;i¾;:{ ;[o;	;"values;@;"values;i¾o;	;"i;@;"i;i¾o;	;"base-value;@;"base_value;i¾:@too;	;"max;@;"max;i½;i½:@exclusiveFo;<	;@;	[ ;iÀ;o;	;"emValues;@;"emValues;iÀ;0;i·;[[o;;"values;@;"values0[o;;"base-value;@;"base_valueo;	;"em-base;@;"em_base;i·o;

;;;["%/* Support for the old syntax */;@;	[ ;iÃo;;;T;"emCalc;@;	[o;<	;@;	[ ;iÆ;o;9;"em-calc;@;0;iÆ;:{ ;[o;	;"values;@;"values;iÆ;0;iÅ;[[o;;"values;@;"values0o;

;;;["/* Maybe you want to create rems with pixels
 * $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $rem-base * 1rem;
 * } */;@;	[ ;iÉo;

;;;["8/* We use these to control various global styles */;@;	[ ;iÏo;;"body-bg;@;	[ ;iÐ;"!default;o:Sass::Script::Color	;0;@:@attrs{	:rediÿ:
alphai:
greeniÿ:	blueiÿ;iÐo;;"body-font-color;@;	[ ;iÑ;"!default;o;I	;0;@;J{	;Ki';Li;Mi';Ni';iÑo;;"body-font-family;@;	[ ;iÒ;"!default;o;	;[
o;	;:string;"Helvetica Neue;@;iÒo;	;;O;"Helvetica;@;iÒo;	;;;"Helvetica;@;iÒo;	;;;"
Arial;@;iÒo;	;;;"sans-serif;@;iÒ;@;iÒ;;8o;;"body-font-weight;@;	[ ;iÓ;"!default;o;	;;;"normal;@;iÓo;;"body-font-style;@;	[ ;iÔ;"!default;o;	;;;"normal;@;iÔo;

;;;["0/* We use this to control font-smoothing */;@;	[ ;iÖo;;"font-smoothing;@;	[ ;i×;"!default;o;	;;;"subpixel-antialiased;@;i×o;

;;;[":/* We use these to control text direction settings */;@;	[ ;iÙo;;"text-direction;@;	[ ;iÚ;"!default;o;	;;;"ltr;@;iÚo;

;;;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */;@;	[ ;iÜo;;"default-float;@;	[ ;iÝ;"!default;o;	;;;"	left;@;iÝo;;"opposite-direction;@;	[ ;iÞ;"!default;o;	;;;"
right;@;iÞu;¼[o:Sass::Script::Operation
:@options{ :
@lineiß:@operand2o:Sass::Script::String	:
@type:identifier:@value"ltr;@;iß:@operator:eq:@operand1o:Sass::Script::Variable	:
@name"text-direction;@:@underscored_name"text_direction;ißu:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:
@name"default-float:@options{ :@children[ :
@lineiã:@guarded0:
@expro:Sass::Script::String	:
@type:identifier:@value"
right;@	;	ião; ;"opposite-direction;@	;[ ;	iä;
0;o;	;;;"	left;@	;	iä[o:Sass::Tree::VariableNode;"default-float;@:@children[ ;ià:@guarded0:
@expro;		;
;;"	left;@;iào;;"opposite-direction;@;[ ;iá;0;o;		;
;;"
right;@;iáo;

;;;["4/* We use these as default colors throughout */;@;	[ ;iço;;"primary-color;@;	[ ;iè;"!default;o;I	;0;@;J{	;Ki0;Li;Mi¦;NiË;ièo;;"secondary-color;@;	[ ;ié;"!default;o;I	;0;@;J{	;Kié;Li;Mié;Nié;iéo;;"alert-color;@;	[ ;iê;"!default;o;I	;0;@;J{	;KiÆ;Li;Mi;Ni;iêo;;"success-color;@;	[ ;ië;"!default;o;I	;0;@;J{	;Kib;Li;Mi¤;Ni(;iëo;

;;;["W/* We use these to make sure border radius matches unless we want it different. */;@;	[ ;iío;;"global-radius;@;	[ ;iî;"!default;o;#;$[ ;i;@;%["px;&"3px;iîo;;"global-rounded;@;	[ ;iï;"!default;o;#;$[ ;iè;@;%["px;&"1000px;iïo;

;;;["L/* We use these to control inset shadow shiny edges and depressions. */;@;	[ ;iño;;"shiny-edge-size;@;	[ ;iò;"!default;o;	;[o;#;$@=;i ;@;%[ ;&"0;iòo;#;$[ ;i;@;%["px;&"1px;iòo;#;$@=;i ;@;%[ ;&"0;iò;@;iò;;o;;"shiny-edge-color;@;	[ ;ió;"!default;o;9;"	rgba;@;0;ió;:{ ;[o;I	;0;@;J{	;Kiÿ;Li;Miÿ;Niÿ;ióo;#;$@=;f0.5;@;%[ ;&"0.5;ióo;;"shiny-edge-active-color;@;	[ ;iô;"!default;o;9;"	rgba;@;0;iô;:{ ;[o;I	;0;@;J{	;Ki ;Li;Mi ;Ni ;iôo;#;$@=;f0.20000000000000001 ;@;%[ ;&"0.2;iôo;

;;;["[/* We use this to control whether or not CSS classes come through in the gem files. */;@;	[ ;iöo;;"include-html-classes;@;	[ ;i÷;"!default;o;;T;@;i÷o;;"include-print-styles;@;	[ ;iø;"!default;o;;T;@;iøo;;" include-html-global-classes;@;	[ ;iù;"!default;o;	;"include-html-classes;@;"include_html_classes;iùo;

;;;["/* Media Queries */;@;	[ ;iûo;;"small-screen;@;	[ ;iü;"!default;o;#;$[ ;i ;@;%["px;&"
768px;iüo;;"medium-screen;@;	[ ;iý;"!default;o;#;$[ ;i ;@;%["px;&"1280px;iýo;;"large-screen;@;	[ ;iþ;"!default;o;#;$[ ;i ;@;%["px;&"1440px;iþo;;"screen;@;	[ ;i ;"!default;o;	;;O;"only screen;@;i o;;"
small;@;	[ ;i;"!default;o:&Sass::Script::StringInterpolation
;@:@aftero;	;;O;");@;i;i:	@mido;	;"small-screen;@;"small_screen;i:@beforeo;	;;O;"!only screen and (min-width: ;@;io;;"medium;@;	[ ;i;"!default;o;P
;@;Qo;	;;O;");@;i;i;Ro;	;"medium-screen;@;"medium_screen;i;So;	;;O;" only screen and (min-width:;@;io;;"
large;@;	[ ;i;"!default;o;P
;@;Qo;	;;O;");@;i;i;Ro;	;"large-screen;@;"large_screen;i;So;	;;O;" only screen and (min-width:;@;io;;"landscape;@;	[ ;i;"!default;o;	;;O;"-only screen and (orientation: landscape);@;io;;"portrait;@;	[ ;i;"!default;o;	;;O;",only screen and (orientation: portrait);@;io;

;;;["H/* Used to provide media query values for javascript components. */;@;	[ ;io;';T;@;"i ;	[o;;o;	;"
small;@;"
small;i	;["font-family; ;!;@;"i ;	[ ;i	o;;o;	;"small-screen;@;"small_screen;i
;["
width; ;!;@;"i ;	[ ;i
;i;(["meta.foundation-mq-small;)o;*;+" ;i;,[o;-;,[o;.
;+@;/o;0;1{ ;i;20;,[o:Sass::Selector::Element	;["	meta;+@;i:@namespace0o:Sass::Selector::Class;["foundation-mq-small;+@;io;';T;@;"i ;	[o;;o;	;"medium;@;"medium;i;["font-family; ;!;@;"i ;	[ ;io;;o;	;"medium-screen;@;"medium_screen;i;["
width; ;!;@;"i ;	[ ;i;i;(["meta.foundation-mq-medium;)o;*;+" ;i;,[o;-;,[o;.
;+@±;/o;0;1{ ;i;20;,[o;T	;["	meta;+@±;i;U0o;V;["foundation-mq-medium;+@±;io;';T;@;"i ;	[o;;o;	;"
large;@;"
large;i;["font-family; ;!;@;"i ;	[ ;io;;o;	;"large-screen;@;"large_screen;i;["
width; ;!;@;"i ;	[ ;i;i;(["meta.foundation-mq-large;)o;*;+" ;i;,[o;-;,[o;.
;+@Ò;/o;0;1{ ;i;20;,[o;T	;["	meta;+@Ò;i;U0o;V;["foundation-mq-large;+@Ò;io;

;;;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;@;	[ ;io;;"cursor-crosshair-value;@;	[ ;i;"!default;o;	;;;"crosshair;@;io;;"cursor-default-value;@;	[ ;i;"!default;o;	;;;"default;@;io;;"cursor-pointer-value;@;	[ ;i;"!default;o;	;;;"pointer;@;io;;"cursor-help-value;@;	[ ;i;"!default;o;	;;;"	help;@;io;;"cursor-text-value;@;	[ ;i;"!default;o;	;;;"	text;@;iu;[o:Sass::Script::Variable	:
@name" include-html-global-classes:@options{ :@underscored_name" include_html_global_classes:
@linei0[!o:Sass::Tree::CommentNode
:
@type:silent:@value["F/* Set box-sizing globally to handle padding and border widths */;@:@children[ ;	i!o:Sass::Tree::RuleNode:@has_childrenT;@:
@tabsi ;[o:Sass::Tree::MixinNode;"box-sizing;@;[ :@splat0;	i%:@keywords{ :
@args[o:Sass::Script::String	;:identifier;"border-box;@;	i%;	i$:
@rule["*,
  *:before,
  *:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;	i$:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;@:@sourceso:Set:
@hash{ ;	i$:@subject0;[o:Sass::Selector::Universal;@;	i$:@namespace0o;;["
o;
;@;o; ;!{ ;	i$;"0;[o;#;@;	i$;$0o:Sass::Selector::Pseudo
;["before:	@arg0;@;	i$:@syntactic_type:
classo;;["
o;
;@;o; ;!{ ;	i$;"0;[o;#;@;	i$;$0o;%
;["
after;&0;@;	i$;';(o;;T;@;i ;[o:Sass::Tree::PropNode;o; 	;"base-font-size;@;"base_font_size;	i);["font-size:@prop_syntax:new;@;i ;[ ;	i);	i);["html,
  body;o;;" ;	i);[o;;[o;
;@F;o; ;!{ ;	i);"0;[o:Sass::Selector::Element	;["	html;@F;	i);$0o;;["
o;
;@F;o; ;!{ ;	i);"0;[o;,	;["	body;@F;	i);$0o;

;;;["/* Default body styles */;@;[ ;	i+o;;T;@;i ;[o;);o; 	;"body-bg;@;"body_bg;	i-;["background;*;+;@;i ;[ ;	i-o;);o; 	;"body-font-color;@;"body_font_color;	i.;["
color;*;+;@;i ;[ ;	i.o;);o;;;;"0;@;["padding;*;+;@;i ;[ ;	i/o;);o;;;;"0;@;["margin;*;+;@;i ;[ ;	i0o;);o; 	;"body-font-family;@;"body_font_family;	i1;["font-family;*;+;@;i ;[ ;	i1o;);o; 	;"body-font-weight;@;"body_font_weight;	i2;["font-weight;*;+;@;i ;[ ;	i2o;);o; 	;"body-font-style;@;"body_font_style;	i3;["font-style;*;+;@;i ;[ ;	i3o;);o;;;;"1;@;["line-height;*;+;@;i ;[ ;	i4o;

;;;["F/* Set to $base-line-height to take on browser default of 150% */;@;[ ;	i4o;);o;;;;"relative;@;["position;*;+;@;i ;[ ;	i5o;);o; 	;"cursor-default-value;@;"cursor_default_value;	i6;["cursor;*;+;@;i ;[ ;	i6;	i,;["	body;o;;" ;	i,;[o;;[o;
;@¥;o; ;!{ ;	i,;"0;[o;,	;["	body;@¥;	i,;$0o;;T;@;i ;[o;);o; 	;"cursor-pointer-value;@;"cursor_pointer_value;	i9;["cursor;*;+;@;i ;[ ;	i9;	i9;["a:hover;o;;" ;	i9;[o;;[o;
;@¼;o; ;!{ ;	i9;"0;[o;,	;["a;@¼;	i9;$0o;%
;["
hover;&0;@¼;	i9;';(o;

;;;["B/* Grid Defaults to get images and embeds to work properly */;@;[ ;	i;o;;T;@;i ;[o;);o;;;;"	100%;@;["max-width;*;+;@;i ;[ ;	i>o;);o;;;;"	auto;@;["height;*;+;@;i ;[ ;	i>;	i>;["img,
  object,
  embed;o;;" ;	i>;[o;;[o;
;@ß;o; ;!{ ;	i>;"0;[o;,	;["img;@ß;	i>;$0o;;["
o;
;@ß;o; ;!{ ;	i>;"0;[o;,	;["object;@ß;	i>;$0o;;["
o;
;@ß;o; ;!{ ;	i>;"0;[o;,	;["
embed;@ß;	i>;$0o;;T;@;i ;[o;);o;;;;"	100%;@;["height;*;+;@;i ;[ ;	iA;	iA;["object,
  embed;o;;" ;	iA;[o;;[o;
;@	;o; ;!{ ;	iA;"0;[o;,	;["object;@	;	iA;$0o;;["
o;
;@	;o; ;!{ ;	iA;"0;[o;,	;["
embed;@	;	iA;$0o;;T;@;i ;[o;);o;;;;"bicubic;@;["-ms-interpolation-mode;*;+;@;i ;[ ;	iB;	iB;["img;o;;" ;	iB;[o;;[o;
;@);o; ;!{ ;	iB;"0;[o;,	;["img;@);	iB;$0o;;T;@;i ;[o;;T;@;i ;[o;);o;;;;"none !important;@;["max-width;*;+;@;i ;[ ;	iH;	iH;["img,
    embed,
    object;o;;" ;	iH;[o;;[o;
;@A;o; ;!{ ;	iH;"0;[o;,	;["img;@A;	iH;$0o;;["
o;
;@A;o; ;!{ ;	iH;"0;[o;,	;["
embed;@A;	iH;$0o;;["
o;
;@A;o; ;!{ ;	iH;"0;[o;,	;["object;@A;	iH;$0;	iE;["#map_canvas,
  .map_canvas;o;;" ;	iE;[o;;[o;
;@c;o; ;!{ ;	iE;"0;[o:Sass::Selector::Id;["map_canvas;@c;	iEo;;["
o;
;@c;o; ;!{ ;	iE;"0;[o:Sass::Selector::Class;["map_canvas;@c;	iEo;

;;;[",/* Miscellaneous useful HTML classes */;@;[ ;	iLo;;T;@;i ;[o;);o;;;;"left !important;@;["
float;*;+;@;i ;[ ;	iM;	iM;["
.left;o;;" ;	iM;[o;;[o;
;@;o; ;!{ ;	iM;"0;[o;.;["	left;@;	iMo;;T;@;i ;[o;);o;;;;"right !important;@;["
float;*;+;@;i ;[ ;	iN;	iN;[".right;o;;" ;	iN;[o;;[o;
;@;o; ;!{ ;	iN;"0;[o;.;["
right;@;	iNo;;T;@;i ;[o;);o;;;;"left !important;@;["text-align;*;+;@;i ;[ ;	iO;	iO;[".text-left;o;;" ;	iO;[o;;[o;
;@³;o; ;!{ ;	iO;"0;[o;.;["text-left;@³;	iOo;;T;@;i ;[o;);o;;;;"right !important;@;["text-align;*;+;@;i ;[ ;	iP;	iP;[".text-right;o;;" ;	iP;[o;;[o;
;@É;o; ;!{ ;	iP;"0;[o;.;["text-right;@É;	iPo;;T;@;i ;[o;);o;;;;"center !important;@;["text-align;*;+;@;i ;[ ;	iQ;	iQ;[".text-center;o;;" ;	iQ;[o;;[o;
;@ß;o; ;!{ ;	iQ;"0;[o;.;["text-center;@ß;	iQo;;T;@;i ;[o;);o;;;;"justify !important;@;["text-align;*;+;@;i ;[ ;	iR;	iR;[".text-justify;o;;" ;	iR;[o;;[o;
;@õ;o; ;!{ ;	iR;"0;[o;.;["text-justify;@õ;	iRo;;T;@;i ;[o;);o;;;;"	none;@;["display;*;+;@;i ;[ ;	iS;	iS;["
.hide;o;;" ;	iS;[o;;[o;
;@;o; ;!{ ;	iS;"0;[o;.;["	hide;@;	iSo;

;;;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */;@;[ ;	iUo;;T;@;i ;[o;);o;;;;"antialiased;@;["-webkit-font-smoothing;*;+;@;i ;[ ;	iY;	iY;[".antialiased;o;;" ;	iY;[o;;[o;
;@%;o; ;!{ ;	iY;"0;[o;.;["antialiased;@%;	iYo;

;;;["W/* Get rid of gap under images by making them display: inline-block; by default */;@;[ ;	i[o;;T;@;i ;[o;);o;;;;"inline-block;@;["display;*;+;@;i ;[ ;	i]o;);o;;;;"middle;@;["vertical-align;*;+;@;i ;[ ;	i^;	i\;["img;o;;" ;	i\;[o;;[o;
;@E;o; ;!{ ;	i\;"0;[o;,	;["img;@E;	i\;$0o;

;;;["(/*
 * Global resets for forms
 * */;@;[ ;	iao;

;;;[";/* Make sure textarea takes on height automatically */;@;[ ;	ieo;;T;@;i ;[o;);o;;;;"	auto;@;["height;*;+;@;i ;[ ;	ifo;);o;;;;"	50px;@;["min-height;*;+;@;i ;[ ;	if;	if;["textarea;o;;" ;	if;[o;;[o;
;@i;o; ;!{ ;	if;"0;[o;,	;["textarea;@i;	if;$0o;

;;;["5/* Make select elements 100% width by default */;@;[ ;	iho;;T;@;i ;[o;);o;;;;"	100%;@;["
width;*;+;@;i ;[ ;	ii;	ii;["select;o;;" ;	ii;[o;;[o;
;@;o; ;!{ ;	ii;"0;[o;,	;["select;@;	ii;$0;i